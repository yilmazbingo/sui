searchState.loadedDescShard("sui_rpc_api", 1, "Pending stake amount for this epoch, emptied at epoch …\nReturns the value of <code>pending_total_sui_withdraw</code>, or the …\nPending stake withdrawn during the current epoch, emptied …\nReturns the value of <code>policy</code>, or the default value if <code>policy</code>…\nThe policy.\nReturns the value of <code>pool_token_balance</code>, or the default …\nTotal number of pool tokens issued by the pool.\nReturns the value of <code>position</code>, or the default value if …\nReturns the value of <code>position</code>, or the default value if …\nOrder or position of the field in the struct or enum …\nOrder or position of the variant in the enum definition.\nReturns the value of <code>previous_digest</code>, or the default value …\nThe hash of the previous <code>CheckpointSummary</code>.\nReturns the value of <code>previous_transaction</code>, or the default …\nThe digest of the transaction that created or last mutated …\nReturns the value of <code>price</code>, or the default value if <code>price</code> …\nGas unit price to use when charging for computation.\nReturns the value of <code>primary_address</code>, or the default value …\nThe address of the narwhal primary\nReturns the value of <code>project_url</code>, or the default value if …\nReturns the value of <code>proof_of_possession</code>, or the default …\nThis is a proof that the validator has ownership of the …\nReturns the value of <code>protocol_public_key</code>, or the default …\nThe public key bytes corresponding to the private key that …\nReturns the value of <code>protocol_version</code>, or the default …\nReturns the value of <code>protocol_version</code>, or the default …\nReturns the value of <code>protocol_version</code>, or the default …\nThe protocol version\nThe protocol version in effect in the new epoch.\nReturns the value of <code>public_key</code>, or the default value if …\nReturns the value of <code>public_key</code>, or the default value if …\nReturns the value of <code>public_key</code>, or the default value if …\nPublic key bytes\nPublic key bytes if scheme is ed25519 | secp256k1 | …\nThe public key of the committee member.\nThe 96-byte Bls12381 public key for this validator.\nReturns the value of <code>pure</code>, or the default value if <code>pure</code> is …\nA move value serialized as BCS.\nAppends the provided enum value to <code>abilities</code>.\nAppends the provided enum value to <code>constraints</code>.\nReturns the value of <code>random_bytes</code>, or the default value if …\nUpdated random bytes.\nReturns the value of …\nThe initial version of the randomness object that it was …\nReturns the value of <code>randomness_round</code>, or the default …\nRandomness round of the update.\nMask specifying which fields to read. If no mask is …\nMask specifying which fields to read. If no mask is …\nMask specifying which fields to read. If no mask is …\nMask specifying which fields to read. If no mask is …\nMask specifying which fields to read. If no mask is …\nMask specifying which fields to read. If no mask is …\nOptional. Mask for specifiying which parts of the …\nMask specifying which fields to read. If no mask is …\nReturns the value of <code>reason</code>, or the default value if <code>reason</code>…\nIf <code>is_valid</code> is <code>false</code>, this is the reason for why the …\nReturns the enum value of <code>reference</code>, or the default if the …\nReturns the value of <code>reference_gas_price</code>, or the default …\nReturns the value of <code>reference_gas_price</code>, or the default …\nReference gas price denominated in MIST\nThe reference gas price for this epoch\nIf this coin type is a regulated coin, this field will be …\nReturns the value of <code>reported</code>, or the default value if …\nThe address of the validator being reported\nThe list of validator (addresses) that are reporting on …\nReturns the value of <code>result</code>, or the default value if <code>result</code>…\nIndex of a result when <code>kind</code> is <code>RESULT</code>.\nReturn types.\nReturns the value of <code>rewards_pool</code>, or the default value if …\nThe epoch stake rewards will be added here at the end of …\nReturns the value of <code>round</code>, or the default value if <code>round</code> …\nReturns the value of <code>round</code>, or the default value if <code>round</code> …\nConsensus round of the commit.\nConsensus round of the authenticator state update.\nReturns the value of <code>safe_mode</code>, or the default value if …\nWhether the system is running in a downgraded safe mode …\nReturns the value of <code>safe_mode_computation_rewards</code>, or the …\nComputation rewards accumulated during safe_mode\nReturns the value of <code>safe_mode_non_refundable_storage_fee</code>, …\nNonrefundable storage fees accumulated during safe_mode\nReturns the value of <code>safe_mode_storage_rebates</code>, or the …\nStorage rebates paid out during safe_mode\nReturns the value of <code>safe_mode_storage_rewards</code>, or the …\nStorage rewards accumulated during safe_mode\nReturns the enum value of <code>scheme</code>, or the default if the …\nReturns the enum value of <code>scheme</code>, or the default if the …\nReturns the enum value of <code>scheme</code>, or the default if the …\nReturns the enum value of <code>scheme</code>, or the default if the …\nThe signature scheme of this signature.\nThe signature scheme of this signature.\nThe signature scheme of this public key.\nThe signature scheme of this signature.\nReturns the value of <code>sender</code>, or the default value if <code>sender</code>…\nReturns the value of <code>sender</code>, or the default value if <code>sender</code>…\nAddress of the account that sent the transaction where …\nReturns the value of <code>sequence_number</code>, or the default value …\nReturns the value of <code>sequence_number</code>, or the default value …\nThe height of this checkpoint.\nThe height of this checkpoint.\nReturns the value of <code>server_version</code>, or the default value …\nSoftware version of the service. Similar to the <code>server</code> …\nSets <code>checks</code> to the provided enum value.\nSets <code>id_operation</code> to the provided enum value.\nSets <code>input_state</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>kind</code> to the provided enum value.\nSets <code>output_state</code> to the provided enum value.\nSets <code>reference</code> to the provided enum value.\nSets <code>scheme</code> to the provided enum value.\nSets <code>scheme</code> to the provided enum value.\nSets <code>scheme</code> to the provided enum value.\nSets <code>scheme</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>visibility</code> to the provided enum value.\nReturns the value of <code>signature</code>, or the default value if …\nReturns the value of <code>signature</code>, or the default value if …\nReturns the value of <code>signature</code>, or the default value if …\nAn aggregated quorum signature from the validator …\nSignature bytes\nSignature bytes if scheme is ed25519 | secp256k1 | …\nUser signature with the public key attested to by the …\nA secp256r1 signature.\nThe 48-byte Bls12381 aggregated signature.\nThe siganture to verify.\nGenerated client implementations.\nGenerated server implementations.\nSet of user signatures that authorized the transaction.\nList of user signatures that are used to authorize the …\nThe plain signatures encoded with signature scheme.\nSet of <code>UserSiganture</code>s authorizing the execution of the …\nNested message and enum types in <code>SimulateTransactionRequest</code>…\nReturns the value of <code>size</code>, or the default value if <code>size</code> is …\nReturns the value of <code>size</code>, or the default value if <code>size</code> is …\nThe offending size.\nThe size or number of key-value pairs in the table or bag\nSchedule of stake subsidies given out each epoch.\nReturns the value of <code>stake_subsidy_decrease_rate</code>, or the …\nThe rate at which the distribution amount decays at the …\nReturns the value of <code>stake_subsidy_period_length</code>, or the …\nNumber of distributions to occur before the distribution …\nReturns the value of <code>stake_subsidy_start_epoch</code>, or the …\nThe starting epoch in which stake subsidies start being …\nStaking pool for this validator.\nMappings from staking pool’s ID to the sui address of a …\nReturns the value of <code>start_version</code>, or the default value …\nstart version of the consensus stream for this object\nThe status of the execution.\nReturns the value of <code>storage_charge</code>, or the default value …\nThe total amount of gas charged for storage during the …\nReturns the value of <code>storage_cost</code>, or the default value if …\nStorage cost, it’s the sum of all storage cost for all …\nStorage Fund info\nReturns the value of <code>storage_id</code>, or the default value if …\nThe PackageId of this package\nReturns the value of <code>storage_rebate</code>, or the default value …\nReturns the value of <code>storage_rebate</code>, or the default value …\nReturns the value of <code>storage_rebate</code>, or the default value …\nThe amount of storage cost refunded to the user for all …\nThe amount of SUI to rebate if this object gets deleted. …\nThe amount of storage rebate refunded to the txn senders.\nReturns the value of <code>sub_dag_index</code>, or the default value …\nThe sub DAG index of the consensus commit. This field is …\nReturns the value of <code>subresult</code>, or the default value if …\nReturns the value of <code>subresult</code>, or the default value if …\nUsed to access a nested result when <code>kind</code> is <code>RESULT</code>.\nIndex of a subresult.\nGenerated client implementations.\nGenerated server implementations.\nReturns the value of <code>success</code>, or the default value if …\nIndicates if the transaction was successful or not.\nReturns the value of <code>sui_balance</code>, or the default value if …\nThe total number of SUI tokens in this pool, including the …\nThe <code>CheckpointSummary</code> for this checkpoint.\nReturns the value of <code>symbol</code>, or the default value if <code>symbol</code>…\nSymbol for the token\nSystem packages (specifically framework and Move stdlib) …\nSnapshot of Sui’s SystemState (…\nReturns the value of <code>threshold</code>, or the default value if …\nThe threshold of signatures needed to validate a signature …\nTicket authorizing the upgrade.\nReturns the value of <code>ticket_id</code>, or the default value if …\nThe ticket Id.\nTimestamp of the checkpoint - number of milliseconds from …\nThe Unix timestamp of the checkpoint that includes this …\nUnix timestamp of the most recently executed checkpoint.\nReturns the value of <code>total_network_transactions</code>, or the …\nTotal number of transactions committed since genesis, …\nReturns the value of <code>total_object_storage_rebates</code>, or the …\nThis is the sum of <code>storage_rebate</code> of all objects currently …\nReturns the value of <code>total_stake</code>, or the default value if …\nTotal amount of stake from all active validators at the …\nReturns the value of <code>total_supply</code>, or the default value if …\nTotal available supply for this coin type.\nReturns the value of <code>transaction</code>, or the default value if …\nDigest of the transaction.\nThe transaction itself.\nThe transaction to execute.\nReturns the value of <code>transaction_digest</code>, or the default …\nThe transaction digest.\nGenerated client implementations.\nGenerated server implementations.\nNested message and enum types in <code>TransactionExpiration</code>.\nNested message and enum types in <code>TransactionFinality</code>.\nNested message and enum types in <code>TransactionKind</code>.\nList of transactions included in this checkpoint.\nSet of transactions committed to in this checkpoint.\nThis field will be populated with information about this …\nReturns the enum value of <code>type</code>, or the default if the …\nThe type of the field\nType of this signature\nReturns the value of <code>type_argument</code>, or the default value …\nIndex of the problematic type argument.\nNested message and enum types in <code>TypeArgumentError</code>.\nThe type arguments to the function.\nReturns the value of <code>type_name</code>, or the default value if …\nReturns the value of <code>type_name</code>, or the default value if …\nFully qualified name of this Datatype.\nFully qualified name of the datatype when <code>type</code> is <code>DATATYPE</code>\nList of datatype origins for mapping datatypes to a …\nReturns the value of <code>type_parameter</code>, or the default value …\nPosition of the type parameter as defined in the …\nSet when <code>type</code> is <code>VECTOR</code> or <code>DATATYPE</code>\nAbility constraints and phantom status for this type’s …\nAbility constraints for type parameters\nNested message and enum types in <code>UnchangedSharedObject</code>.\nShared objects that are not mutated in this transaction. …\nReturns the value of <code>upgraded_id</code>, or the default value if …\nId of the upgraded package.\nReturns the value of <code>upgraded_version</code>, or the default …\nVersion of the upgraded package.\nNested message and enum types in <code>UserSignature</code>.\nReturns the value of <code>validator</code>, or the default value if …\nBls12381 public key of the validator\nTable storing preactive/candidate validators, mapping …\nReturns the value of <code>validator_low_stake_grace_period</code>, or …\nA validator can have stake below …\nReturns the value of <code>validator_low_stake_threshold</code>, or the …\nDeprecated. Validators with stake amount below …\nA list of the records of validator reporting each other.\nReturns the value of <code>validator_very_low_stake_threshold</code>, …\nDeprecated. Validators with stake below …\nInformation about the validators\nReturns the value of <code>value</code>, or the default value if <code>value</code> …\nReturns the value of <code>value</code>, or the default value if <code>value</code> …\nBytes of a BCS serialized value.\nReturns the value of <code>value_type</code>, or the default value if …\nThe type of the dynamic field “value”.\nSet of variants if this Datatype is an enum.\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nReturns the value of <code>version</code>, or the default value if …\nVersion of this CheckpointContents\nVersion of this TransactionEffects.\nVersion of the shared object.\nRequested version of the input object when <code>kind</code> is …\nRequest a specific version of the object. If no version is …\nThe version of this package\nThe version number\nVersion of the object.\nThe version of this object.\nThe <code>initial_shared_version</code> if kind is <code>SHARED</code> or …\nThe version of the system state data structure type.\nVersion of this Transaction.\nVersion of the package.\nAssigned version.\nVersion of this message\nVersion of this ExecutionTimeObservations\nList of object version assignments.\nReturns the value of <code>version_specific_data</code>, or the default …\n<code>CheckpointSummary</code> is not an evolvable structure - it must …\nList of all package versions, ordered by version.\nReturns the enum value of <code>visibility</code>, or the default if …\nWhether the function is <code>public</code>, <code>private</code> or <code>public(friend)</code>\nReturns the value of <code>voting_power</code>, or the default value if …\nThe voting power of this validator, which might be …\nReturns the value of <code>weight</code>, or the default value if <code>weight</code>…\nReturns the value of <code>weight</code>, or the default value if <code>weight</code>…\nThe weight of this member’s signature.\nvoting weight this validator possesses.\nReturns the value of <code>worker_address</code>, or the default value …\nThe address of the narwhal worker\nReturns the value of <code>worker_public_key</code>, or the default …\nThe public key bytes correstponding to the Narwhal Worker\nA zklogin public identifier if scheme is zklogin.\nThe zklogin authenticator if scheme is <code>ZKLOGIN</code>.\nThe gas coin.\nOne of the input objects or primitive values (from …\nThe result of another command (from <code>ProgrammableTransaction</code>…\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ArgumentKind</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ArgumentKind</code>.\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>InputObjectState</code>, or <code>None</code> if <code>value</code> is …\nConverts an <code>i32</code> to a <code>OutputObjectState</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>IdOperation</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>InputObjectState</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>OutputObjectState</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>IdOperation</code>.\nAn elliptic curve multiset hash attesting to the set of …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>CheckpointCommitmentKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\n<code>forall T: Vec&lt;T&gt; -&gt; vector&lt;T&gt;</code> Given n-values of the same …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;Coin&lt;T&gt;&gt;)</code> It merges n-coins into the …\nA call to either an entry or a public Move function.\nPublishes a Move package. It takes the package bytes and a …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;u64&gt;)</code> -&gt; <code>Vec&lt;Coin&lt;T&gt;&gt;</code> It splits off …\n<code>(Vec&lt;forall T:key+store. T&gt;, address)</code> It sends n-objects …\nUpgrades a Move package. Takes (in order):\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nOut of bounds access to input or results.\nInvalid argument arity. Expected a single argument but …\nInvalid argument to private entry function. Private entry …\nThe argument cannot be deserialized into a value of the …\nInvalid usage of gas coin. The gas coin can only be used …\nImmutable objects cannot be passed by mutable reference, …\nImmutable objects cannot be passed by-value.\nInvalid usage of result. Expected a single result but …\nThe argument cannot be instantiated from raw bytes.\nInvalid usage of Move value. - Mutably borrowed values …\nOut of bounds access to subresult.\nShared object operations such as wrapping, freezing, or …\nThe type of the value does not match the expected type.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>CommandArgumentErrorKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>DatatypeKind</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>DatatypeKind</code>.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>DynamicFieldKind</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>DynamicFieldKind</code>.\nCreate the accumulator root object.\nCreate and initialize the authenticator object used for …\nExpire JWKs used for zklogin.\nInitialize the bridge committee.\nCreate and initialize the bridge object.\nEnd the epoch and start the next one.\nCreate and initialize the deny list object.\nExecution time observations from the committee to preserve …\nCreate and initialize the randomness object.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nAddress is denied for this coin type.\nParity mismatch for Move function. The number of arguments …\nCertificate is on the deny list.\nCircular object ownership.\nCoin balance overflowed an u64.\nCoin type is globally paused for use.\nInvalid command argument.\nSet of objects that were congested, leading to the …\nEffects from the transaction are too large.\nCertificate is canceled because randomness could not be …\nCertificate is canceled due to congestion on shared …\nAttempted to use feature that is not supported yet.\nFunction not found.\nRequested shared object has been deleted.\nInsufficient coin balance for requested operation.\nInsufficient gas.\nInvalid <code>Gas</code> object.\nInvalid public Move function signature. Unsupported return …\nInvalid transfer object, object does not have public …\nInvariant violation.\nMove runtime abort.\nError from a non-abort instruction. Possible causes: …\nNon-entry function invoked. Move Call must start with an …\nMove object is larger than the maximum allowed size.\nPackage is larger than the maximum allowed size.\nInvalid package upgrade.\nPublish error, non-zero address. The modules in the …\nPublish or upgrade dependency downgrade.\nPublish or Upgrade is missing dependency.\nThe requested shared object operation is not allowed.\nSui Move bytecode verification error.\nSui Move bytecode verification timed out.\nType argument error.\nType parity mismatch for Move function. Mismatch between …\nUnused result without the drop ability.\nMoveVm invariant violation.\nBytecode verification error.\nIndicates the transaction tried to write objects too large …\nString value of the enum field names used in the ProtoBuf …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ExecutionErrorKind</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ExecutionErrorKind</code>.\nDecodes an instance of the message from a buffer, and …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ExecutionTimeObservationKind</code>, or <code>None</code> …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Visibility</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Visibility</code>.\nIf neither is provided, return the latest\nThe digest of the requested checkpoint.\nThe sequence number of the requested checkpoint.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nA Move object that is either immutable or address owned.\nA move value serialized as BCS.\nA Move object that is attempted to be received in this …\nA Move object whose owner is “Shared”.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>InputKind</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>InputKind</code>.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nQuery the service for general information about its …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nQuery the service for general information about its …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Reference</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Reference</code>.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>OwnerKind</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>OwnerKind</code>.\nDigest in upgrade ticket and computed digest differ.\nPackage upgrade is incompatible with previous version.\nObject is not a package.\nPackage ID does not match <code>PackageId</code> in upgrade ticket.\nUnable to fetch package.\nUpgrade policy is not valid.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>PackageUpgradeErrorKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nPerform signature verification of a UserSignature against …\nGenerated gRPC service name\nGenerated trait containing gRPC methods that should be …\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nPerform signature verification of a UserSignature against …\nbuf:lint:ignore ENUM_ZERO_VALUE_SUFFIX\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>TransactionChecks</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>TransactionChecks</code>.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nSubscribe to the stream of checkpoints.\nGenerated gRPC service name\nServer streaming response type for the …\nGenerated trait containing gRPC methods that should be …\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nSubscribe to the stream of checkpoints.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated gRPC service name\nGenerated trait containing gRPC methods that should be …\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nValidators won’t sign and execute transaction unless the …\nThe transaction has no expiration.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>TransactionExpirationKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nA quorum certificate certifying that a transaction is …\nSequence number of the checkpoint that includes the …\nIndicates that a quorum of validators has executed the …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nUpdate set of valid JWKs used for zklogin.\nSystem transaction used to end an epoch.\nV1 consensus commit update.\nV2 consensus commit update.\nV3 consensus commit update.\nV4 consensus commit update.\nSet of operations to run at the end of the epoch to close …\nTransaction used to initialize the chain state.\nA user transaction comprised of a list of native commands …\nRandomness update.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nA type provided did not match the specified constraint.\nA type was not found in the module specified.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>TypeArgumentErrorKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>TypeArgumentErrorKind</code>…\nShared objects that was congested and resulted in this …\nDeleted shared objects that appear mutably/owned in the …\nRead of a per-epoch config object that should remain the …\nDeleted shared objects that appear as read-only in the …\nRead-only shared object from the input.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>UnchangedSharedObjectKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nThe multisig aggregated signature if scheme is <code>MULTISIG</code>.\nThe passkey authenticator if scheme is <code>PASSKEY</code>.\nSimple signature if scheme is ed25519 | secp256k1 | …\nThe zklogin authenticator if scheme is <code>ZKLOGIN</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nThe gas coin.\nOne of the input objects or primitive values (from …\nThe result of another command (from <code>ProgrammableTransaction</code>…\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ArgumentKind</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ArgumentKind</code>.\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>InputObjectState</code>, or <code>None</code> if <code>value</code> is …\nConverts an <code>i32</code> to a <code>OutputObjectState</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>IdOperation</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>InputObjectState</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>OutputObjectState</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>IdOperation</code>.\nAn elliptic curve multiset hash attesting to the set of …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>CheckpointCommitmentKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\n<code>forall T: Vec&lt;T&gt; -&gt; vector&lt;T&gt;</code> Given n-values of the same …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;Coin&lt;T&gt;&gt;)</code> It merges n-coins into the …\nA call to either an entry or a public Move function.\nPublishes a Move package. It takes the package bytes and a …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;u64&gt;)</code> -&gt; <code>Vec&lt;Coin&lt;T&gt;&gt;</code> It splits off …\n<code>(Vec&lt;forall T:key+store. T&gt;, address)</code> It sends n-objects …\nUpgrades a Move package. Takes (in order):\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nOut of bounds access to input or results.\nInvalid argument arity. Expected a single argument but …\nInvalid argument to private entry function. Private entry …\nThe argument cannot be deserialized into a value of the …\nInvalid usage of gas coin. The gas coin can only be used …\nImmutable objects cannot be passed by mutable reference, …\nImmutable objects cannot be passed by-value.\nInvalid usage of result. Expected a single result but …\nThe argument cannot be instantiated from raw bytes.\nInvalid usage of Move value. - Mutably borrowed values …\nOut of bounds access to subresult.\nShared object operations such as wrapping, freezing, or …\nThe type of the value does not match the expected type.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>CommandArgumentErrorKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nCreate the accumulator root object.\nCreate and initialize the authenticator object used for …\nExpire JWKs used for zklogin.\nInitialize the bridge committee.\nCreate and initialize the bridge object.\nEnd the epoch and start the next one.\nCreate and initialize the deny list object.\nExecution time observations from the committee to preserve …\nCreate and initialize the randomness object.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nAddress is denied for this coin type.\nParity mismatch for Move function. The number of arguments …\nCertificate is on the deny list.\nCircular object ownership.\nCoin balance overflowed an u64.\nCoin type is globally paused for use.\nInvalid command argument.\nEffects from the transaction are too large.\nCertificate is canceled because randomness could not be …\nCertificate is canceled due to congestion on shared …\nAttempted to use feature that is not supported yet.\nFunction not found.\nRequested shared object has been deleted.\nInsufficient coin balance for requested operation.\nInsufficient gas.\nInvalid <code>Gas</code> object.\nInvalid public Move function signature. Unsupported return …\nInvalid transfer object, object does not have public …\nInvariant violation.\nMove runtime abort.\nError from a non-abort instruction. Possible causes: …\nNon-entry function invoked. Move Call must start with an …\nMove object is larger than the maximum allowed size.\nPackage is larger than the maximum allowed size.\nInvalid package upgrade.\nPublish error, non-zero address. The modules in the …\nPublish or upgrade dependency downgrade.\nPublish or Upgrade is missing dependency.\nThe requested shared object operation is not allowed.\nSui Move bytecode verification error.\nSui Move bytecode verification timed out.\nType argument error.\nType parity mismatch for Move function. Mismatch between …\nUnused result without the drop ability.\nMoveVm invariant violation.\nBytecode verification error.\nIndicates the transaction tried to write objects too large …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ExecutionErrorKind</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ExecutionErrorKind</code>.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ExecutionTimeObservationKind</code>, or <code>None</code> …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nIf neither is provided, return the latest\nThe digest of the requested checkpoint.\nThe sequence number of the requested checkpoint.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nA Move object that is either immutable or address owned.\nA move value serialized as BCS.\nA Move object that is attempted to be received in this …\nA Move object whose owner is “Shared”.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>InputKind</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>InputKind</code>.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nQuery the service for general information about its …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nQuery the service for general information about its …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>OwnerKind</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>OwnerKind</code>.\nDigest in upgrade ticket and computed digest differ.\nPackage upgrade is incompatible with previous version.\nObject is not a package.\nPackage ID does not match <code>PackageId</code> in upgrade ticket.\nUnable to fetch package.\nUpgrade policy is not valid.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>PackageUpgradeErrorKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated gRPC service name\nGenerated trait containing gRPC methods that should be …\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nValidators won’t sign and execute transaction unless the …\nThe transaction has no expiration.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>TransactionExpirationKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nA quorum certificate certifying that a transaction is …\nSequence number of the checkpoint that includes the …\nIndicates that a quorum of validators has executed the …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nUpdate set of valid JWKs used for zklogin.\nSystem transaction used to end an epoch.\nV1 consensus commit update.\nV2 consensus commit update.\nV3 consensus commit update.\nV4 consensus commit update.\nSet of operations to run at the end of the epoch to close …\nTransaction used to initialize the chain state.\nA user transaction comprised of a list of native commands …\nRandomness update.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nA type provided did not match the specified constraint.\nA type was not found in the module specified.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>TypeArgumentErrorKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>TypeArgumentErrorKind</code>…\nShared objects that was congested and resulted in this …\nDeleted shared objects that appear mutably/owned in the …\nRead of a per-epoch config object that should remain the …\nDeleted shared objects that appear as read-only in the …\nRead-only shared object from the input.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>UnchangedSharedObjectKind</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChain name of the current chain\nChain ID of the current chain\nCurrent checkpoint height\nCurrent epoch of the chain\nLowest available checkpoint for which transaction and …\nLowest available checkpoint for which object data can be …\nCurrent timestamp of the chain - encoded in the RFC 3339 …\nCurrent timestamp of the chain - represented as number of …")